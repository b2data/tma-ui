import{j as t}from"./jsx-runtime-D_zvdyIk.js";import{c as n}from"./classNames-BjxpnYM-.js";import"./file-zip-BXERkKO-.js";import"./index-2yJIXLcc.js";import"./dayjs.min-qj4fShTU.js";import{u as m}from"./usePlatform-CpmMXCo-.js";import{V as l}from"./VisuallyHidden-DpPGOsnD.js";const _="_wrapper_126ey_1",d="_control_126ey_20",h="_input_126ey_63",e={wrapper:_,"wrapper--disabled":"_wrapper--disabled_126ey_15",control:d,"wrapper--base":"_wrapper--base_126ey_28","wrapper--ios":"_wrapper--ios_126ey_51",input:h},u={base:e["wrapper--base"],ios:e["wrapper--ios"]},s=({style:r,className:o,disabled:a,children:p,...i})=>{const c=m();return t.jsxs("label",{className:n(e.wrapper,u[c=="ios"?"ios":"base"],a&&e["wrapper--disabled"],o),style:r,children:[t.jsx(l,{...i,Component:"input",type:"checkbox",className:e.input,disabled:a}),t.jsx("div",{"aria-hidden":!0,className:e.control}),p]})};try{s.displayName="Switch",s.__docgenInfo={description:`A custom switch component that mimics the behavior of a checkbox input but with enhanced styling.
It supports all the standard attributes of an HTML input element of type "checkbox".
The appearance of the switch can be customized to match either a base or iOS platform style using CSS modules.`,displayName:"Switch",props:{}}}catch{}export{s as S};
