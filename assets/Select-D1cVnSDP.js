import{j as t}from"./jsx-runtime-D_zvdyIk.js";import{c as u}from"./classNames-BjxpnYM-.js";import{b as c}from"./file-zip-BXERkKO-.js";import"./index-2yJIXLcc.js";import"./dayjs.min-qj4fShTU.js";import{u as m}from"./usePlatform-CpmMXCo-.js";import{F as f}from"./FormInput-BXR-3vMc.js";import{T as h}from"./Typography-C9RDb2oI.js";const y="_wrapper_swhha_1",w="_select_swhha_5",_="_chevron_swhha_19",e={wrapper:y,select:w,chevron:_},o=({header:a,startAdornment:l,status:i,className:p,disabled:r,wrapperProps:d,...s})=>{const n=m();return t.jsxs(f,{header:a,startAdornment:l,status:i,disabled:r,className:u(e.wrapper,n==="ios"&&e["wrapper--ios"],p),wrapperProps:d,required:s.required,children:[t.jsx(h,{variant:n==="ios"?"text":"subHeadline",Component:"select",className:e.select,multiple:!1,disabled:r,...s}),t.jsx(c,{"aria-hidden":!0,className:e.chevron})]})};try{o.displayName="Select",o.__docgenInfo={description:"Renders a custom styled select input within a `FormInput` container. This component is designed to integrate seamlessly\nwith the form input styles, providing a consistent look and enhanced features such as a custom dropdown arrow and support\nfor platform-specific typography. The `FormInput` wrapper facilitates the inclusion of headers and status messages.",displayName:"Select",props:{children:{defaultValue:null,description:"Children elements, typically `option` elements to be rendered within the select.",name:"children",required:!0,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Defines the visual state of the form input (e.g., error, focused).",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"focused"'}]}},disabled:{defaultValue:null,description:"Indicates if the form input is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"Indicates if the input is required.",name:"required",required:!1,type:{name:"boolean"}},startAdornment:{defaultValue:null,description:"Content to be displayed before the form input, such as icons or labels.",name:"startAdornment",required:!1,type:{name:"ReactNode"}},header:{defaultValue:null,description:"Optional header content, displayed above the form input on `base` platform.",name:"header",required:!1,type:{name:"ReactNode"}},wrapperProps:{defaultValue:null,description:"Additional class name for the root element.",name:"wrapperProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},helperText:{defaultValue:null,description:"Helper text",name:"helperText",required:!1,type:{name:"ReactNode"}}}}}catch{}export{o as S};
