import{j as l}from"./jsx-runtime-D_zvdyIk.js";import{c as o}from"./classNames-BjxpnYM-.js";import"./file-zip-BXERkKO-.js";import"./index-2yJIXLcc.js";import{T as r}from"./Typography-C9RDb2oI.js";const i="_wrapper_11cbg_1",u={wrapper:i},a=({className:e,children:t,...n})=>l.jsx(r,{Component:"a",variant:"caption",className:o(u.wrapper,e),...n,children:t});try{a.displayName="Link",a.__docgenInfo={description:"",displayName:"Link",props:{variant:{defaultValue:null,description:"Determines the component and styles of text: h1, h2, h3, h4, h5, h6, span .",name:"variant",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"caption"'},{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'},{value:'"headline"'},{value:'"subHeadline"'}]}},weight:{defaultValue:null,description:"Controls the font weight of the text, with options ranging from light to bold.",name:"weight",required:!1,type:{name:"enum",value:[{value:'"bold"'},{value:'"light"'},{value:'"regular"'}]}},color:{defaultValue:null,description:"Determines the color of the text.",name:"color",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"error"'},{value:'"header"'},{value:'"hint"'},{value:'"accent"'},{value:'"subtitle"'}]}},caps:{defaultValue:null,description:"If true, transforms the text to uppercase for stylistic emphasis.",name:"caps",required:!1,type:{name:"boolean"}},Component:{defaultValue:null,description:"Specifies the HTML tag or React component used to render the text, defaulting to `span`.",name:"Component",required:!1,type:{name:"ElementType"}},plain:{defaultValue:null,description:"When true, removes the default margins around the text, useful for inline styling or custom layouts.",name:"plain",required:!1,type:{name:"boolean"}},small:{defaultValue:null,description:"When true, reduce font-size of the component. Applies only for `subHeadline` and `caption`.",name:"small",required:!1,type:{name:"boolean"}},editableProps:{defaultValue:null,description:"",name:"editableProps",required:!1,type:{name:"{ enabled?: boolean; placeholder?: string; plain?: boolean | undefined; markdown?: boolean | undefined; } | undefined"}},markdown:{defaultValue:null,description:"Content to be displayed as HTML from Markdown string.",name:"markdown",required:!1,type:{name:"string"}}}}}catch{}export{a as L};
